#%Module1.0#####################################################################
##
## Program modulefile
##
proc ModulesHelp { } {
        global version prefix program

        puts stderr "\t$program version: $version"
        puts stderr "\t$program Prefix: $prefix"
}

# for Tcl script use only
set program     Anaconda    
set version     3-2021.05
setenv          _CE_CONDA {}
setenv          _CE_M {}
setenv          CONDA_EXE $env(MODULE_PREFIX)/anaconda3/bin/conda
setenv          CONDA_PYTHON_EXE $env(MODULE_PREFIX)/anaconda3/bin/python
setenv          CONDA_SHLVL 0
prepend-path    PATH    $env(MODULE_PREFIX)/anaconda3/condabin

module-whatis   "$program version: $version"

set-function    __add_sys_prefix_to_path {
    if [ -n "${_CE_CONDA}" ] && [ -n "${WINDIR+x}" ]; then
        SYSP=$(\dirname "${CONDA_EXE}");
    else
        SYSP=$(\dirname "${CONDA_EXE}");
        SYSP=$(\dirname "${SYSP}");
    fi;
    if [ -n "${WINDIR+x}" ]; then
        PATH="${SYSP}/bin:${PATH}";
        PATH="${SYSP}/Scripts:${PATH}";
        PATH="${SYSP}/Library/bin:${PATH}";
        PATH="${SYSP}/Library/usr/bin:${PATH}";
        PATH="${SYSP}/Library/mingw-w64/bin:${PATH}";
        PATH="${SYSP}:${PATH}";
    else
        PATH="${SYSP}/bin:${PATH}";
    fi;
    \export PATH}
set-function    __conda_activate {
    if [ -n "${CONDA_PS1_BACKUP:+x}" ]; then
        PS1="$CONDA_PS1_BACKUP";
        \unset CONDA_PS1_BACKUP;
    fi;
    \local cmd="$1";
    shift;
    \local ask_conda;
    CONDA_INTERNAL_OLDPATH="${PATH}";
    __add_sys_prefix_to_path;
    ask_conda="$(PS1="$PS1" "$CONDA_EXE" $_CE_M $_CE_CONDA shell.posix "$cmd" "$@")" || \return $?;
    rc=$?;
    PATH="${CONDA_INTERNAL_OLDPATH}";
    \eval "$ask_conda";
    if [ $rc != 0 ]; then
        \export PATH;
    fi;
    __conda_hashr}
set-function    __conda_hashr {
    if [ -n "${ZSH_VERSION:+x}" ]; then
        \rehash;
    else
        if [ -n "${POSH_VERSION:+x}" ]; then
            :;
        else
            \hash -r;
        fi;
    fi}
set-function    __conda_reactivate {
    \local ask_conda;
    CONDA_INTERNAL_OLDPATH="${PATH}";
    __add_sys_prefix_to_path;
    ask_conda="$(PS1="$PS1" "$CONDA_EXE" $_CE_M $_CE_CONDA shell.posix reactivate)" || \return $?;
    PATH="${CONDA_INTERNAL_OLDPATH}";
    \eval "$ask_conda";
    __conda_hashr}
set-function    conda {
    if [ "$#" -lt 1 ]; then
        "$CONDA_EXE" $_CE_M $_CE_CONDA;
    else
        \local cmd="$1";
        shift;
        case "$cmd" in
            activate | deactivate)
                __conda_activate "$cmd" "$@"
            ;;
            install | update | upgrade | remove | uninstall)
                CONDA_INTERNAL_OLDPATH="${PATH}";
                __add_sys_prefix_to_path;
                "$CONDA_EXE" $_CE_M $_CE_CONDA "$cmd" "$@";
                \local t1=$?;
                PATH="${CONDA_INTERNAL_OLDPATH}";
                if [ $t1 = 0 ]; then
                    __conda_reactivate;
                else
                    return $t1;
                fi
            ;;
            *)
                CONDA_INTERNAL_OLDPATH="${PATH}";
                __add_sys_prefix_to_path;
                "$CONDA_EXE" $_CE_M $_CE_CONDA "$cmd" "$@";
                \local t1=$?;
                PATH="${CONDA_INTERNAL_OLDPATH}";
                return $t1
            ;;
        esac;
    fi}